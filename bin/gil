#!/usr/bin/env node

const program = require('caporal');
const pckg = require('../package.json');
const GenomeLite = require('../src/gil');
const options = require('../src/options').serverOptions;

program
	.version(pckg.version)
	.description(pckg.description);

let startServer = (args, opts) => {
	const {path = process.cwd()} = args || {};
	const {port = options.port} = opts || {};
	GenomeLite.server({path, host: 'localhost', port});
};

program
	.command('start', 'Start web server')
	.alias('serve')
	.argument('[path]', 'Root path', false, process.cwd())
	.option('-p, --port <n>', 'Server port', program.INT, options.port)
	.action(startServer);

// program
// 	.command('desktop [path]', null)
// 	.description('execute the given remote cmd')
// 	.action((path) => {
// 		path = path || process.cwd();
// 		GenomeLite.desktop(path);
// 	});
//
// program
// 	.command('mobile [path]', null)
// 	.description('execute the given remote cmd')
// 	.action((path) => {
// 		path = path || process.cwd();
// 		GenomeLite.mobile(path);
// 	});

program.parse(process.argv);
